Install Ansible in AWS EC2 Redhat Server - Mithun Technologoes +91-9980923226
 
 
  Mithun Technologies            +91-9980923226              devopstrainingblr@gmail.com
                                                       http://mithuntechnologies.com/
                                                       http://mithuntechnologies.co.in/ 
Ansible Installation

1) Create RedHat 3 Servers (1-AnsibleServer , 2- Host Machines for demo) in AWS.
 

2) Login As a root user and create ansible user and provide sudo access in all Servers.

    2.1) Create the user ansible and set the password on all hosts:
           sudo useradd ansible
           sudo passwd ansible
     
    2.2) Make the necessary entry in sudoers file /etc/sudoersfor ansible        
           user for password-less sudo access:
          
           visudo

           ansible ALL=(ALL) NOPASSWD: ALL

       

    2.3) Make the necessary changes  in sshd_config file /etc/ssh/sshd_config    
           to enable password based authentication.

         Un comment PasswordAuthentication yes
         and comment  PasswordAuthentication no.
         And save the file .

            vi /etc/ssh/sshd_config

     2.4)    Then restart sshd service.
                sudo service sshd restart

=============================================================================
               Install Ansible in Red hat (Ansible Server)
=============================================================================

1)     SSH to Redhat System & Switch to ansible user
       sudo su - ansible
      
2)     Install python
       sudo yum install python3 -y
      
3)    Update python alaternatives
       sudo alternatives --set python /usr/bin/python3
      
4)    Verify Python Version
         python --version
         
5) install epel release repo
	 sudo dnf install \https://dl.fedoraproject.org/pub/epel/epel-release-latest-9.noarch.rpm
  

6)    Install ansible using Yum 
sudo yum -y install ansible
      
7)    Verify Ansible version
       ansible --version
       
8) in order run commands without sudo 
	sudo chown -R ansible:ansible /etc/ansible/
	sudo chown -R ansible:ansible /home/ansible/
       
=============================================================================
               Generate SSH Key, Copy SSH Key(Ansible Server)
=============================================================================

1)    Now generate SSH key in Ansible Server: 

sudo su - ansible

ssh-keygen

2)    Copy it to Host  servers as ansible user: 

  Repeat below command by updating HOST IP for all the  HOST Servers. 

          ssh-copy-id ansible@<HostIP>

 // it will create a authorizedkeys file and  copy ansible server ssh-key into autorized keys file of respective target servers 

Update Host Inventory in Ansible Server to add host serversâ€™ details.

#####There are three ways to connect target servers#####

1)    Add Host Server details

 

vi  /etc/ansible/hosts

 

# Connect using username and password

192.168.1.105 ansible_user=ansible ansible_password=password

 

# Connect using username and pem(Make Sure Have pem file at given path)

172.31.35.23 ansible_user=ec2-user ansible_ssh_private_key_file=~/aws.pem

 

# If ssh keys are copied

172.31.35.23

 

2)    Use ping module to test Ansible and after successful run you can see the below output. 

 

          ansible all -m ping

            172.31.35.23 | SUCCESS => {

            "changed": false,

             "ping": "pong"

             }

 

3)    Install sshpass in Ansible server if you get below error .

 

"to use the 'ssh' connection type with passwords, you must install the sshpass program

$ sudo yum install -y http://mirror.centos.org/centos/7/extras/x86_64/Packages/sshpass-1.06-2.el7.x86_64.rpm

// to see ansible modules 
	ansible-doc -l
// to see specific module 
	ansible-doc yum 
// displaying output in one line 
	ansible all -m ping -o
	
// in order to add local host into ansible host file means 

1) copy the ssh-id 
	ssh-copy-id ansible@localhost
	
2) then try to connect 
	ansible all -m ping 
	
3) in order to install a package in all target server 
	1) ansible all -b -m yum -a "name=vim"
		OR
	   ansible all -b -m yum -a "name=vim state=present"
	   
	2) ansible all -b -m yum -a "name=httpd state=present"  // to install 
	
	   ansible all -b -m service -a "name=vim state=started"  	//  to start httpd
	   ansible all -b -m service -a "name=vim state=stopped"  	//  to stop httpd
	   ansible all -b -m service -a "name=vim state=restarted"  	//  to restart httpd
	   
	   ansible all -b -m yum -a "name=vim state=absent"	// to uninstall the httpd
	   		OR
	   ansible all -b -m yum -a "name=vim state=removed"	// to uninstall the httpd
	   
	
4) other commands to know details of server
	ansible all -b -m shell -a "uptime" 
	ansible all -b -m shell -a "date"
	ansible all -b -m shell -a "cat /etc/*release"
	ansible all -b -m shell -a "uname"
	ansible all -b -m shell -a "df -h"
	
5) NOTE: a command will get executed when you hit without double quotes an argument without option 
Ex: 	ansible all -b -m shell -a df 
	ansible all -b -m shell -a date
	
   but when you enter a command a with option then you need to use double quotes for an argument 
Ex: 	ansible all -b -m shell -a "df -h"
	ansible all -b -m yum -a "name=vim"
	
6) Copy a file from source to destination 
	ansible all -m service -a "src=test.txt dest=/tmp/test.txt 
	
7) to get server details or facts of server information 
	ansible localhost -m setup
	
8) You can segregate groups as mentioned below and call 
Ex: [webservers]
    192.168.0.0
    192.168.0.1
    192.168.0.2
    
    [appservers]
    192.168.0.3
    192.168.0.4
    192.168.0.5
    
    ansible webservers -m ping 
    ansible appservers -m ping
    
9) you can create custom ansible host file and call 
    sudo vi /etc/ansible/facebook
    192.168.0.0                          // add the ip 
    :wq
    
    ansible -i /etc/ansible/facebook all -m ping
    
10) you can set a custom host file as parmanent using environment variable but ansible will not recommend to create 

    export ANSIBLE_HOSTS=/etc/ansible/amazon
    
PLAYBOOKS
1) writing first playbook 
	pingserver.yml
	---
	- hosts: all
	  tasks:
	   - name: ping servers
	     ping:
	...
	
NOTE: before running the playbook verify the indentation whether written script is correct or not by using below command and once dry run 
	1) syntax check command 
		ansible-playbook pingserver.yml --syntax-check
	2) Dry run 
		ansible-playbook pingserver.yml --check

    
    
    
	
	
